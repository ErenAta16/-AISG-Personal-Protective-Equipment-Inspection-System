[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "aisg-kkd-denetim"
dynamic = ["version"]
description = "AI-powered safety monitoring system for personal protective equipment detection"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MCBU XRLab Team", email = "xrlab@mcbu.edu.tr"}
]
maintainers = [
    {name = "MCBU XRLab Team", email = "xrlab@mcbu.edu.tr"}
]
keywords = [
    "computer vision",
    "object detection", 
    "safety monitoring",
    "PPE detection",
    "industrial safety",
    "YOLOv8",
    "Flask",
    "OpenCV",
    "AI",
    "machine learning",
    "deep learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Manufacturing",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Computer Vision",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Safety",
]
requires-python = ">=3.8"
dependencies = [
    "Flask>=2.3.3",
    "Flask-CORS>=4.0.0",
    "opencv-python>=4.8.1.78",
    "ultralytics>=8.0.196",
    "torch>=1.13.0",
    "torchvision>=0.14.0",
    "Pillow>=10.0.1",
    "numpy>=1.24.3",
    "requests>=2.31.0",
    "gunicorn>=21.2.0",
    "pandas>=2.0.3",
    "matplotlib>=3.7.2",
    "python-dotenv>=1.0.0",
    "Flask-Login>=0.6.3",
    "python-dateutil>=2.8.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-mock>=3.0",
    "flake8>=3.8",
    "black>=21.0",
    "isort>=5.0",
    "mypy>=0.800",
    "bandit>=1.6",
    "safety>=1.10",
    "pre-commit>=2.15",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
    "sphinx-autodoc-typehints>=1.12",
]
deploy = [
    "gunicorn>=20.0",
    "supervisor>=4.0",
    "nginx>=1.18",
]

[project.urls]
Homepage = "https://github.com/username/aisg-kkd-denetim-sistemi"
Documentation = "https://github.com/username/aisg-kkd-denetim-sistemi#readme"
Repository = "https://github.com/username/aisg-kkd-denetim-sistemi"
"Bug Tracker" = "https://github.com/username/aisg-kkd-denetim-sistemi/issues"
Funding = "https://github.com/sponsors/username"

[project.scripts]
aisg = "aisg.cli:main"
aisg-server = "aisg.server:main"
aisg-train = "aisg.training:main"

[tool.setuptools]
packages = ["aisg"]

[tool.setuptools.package-data]
aisg = [
    "models/*.pt",
    "config/*.yaml", 
    "config/*.json",
    "templates/*.html",
    "static/*",
]

[tool.setuptools.dynamic]
version = {attr = "aisg.__version__"}

[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 127
known_first_party = ["aisg"]
known_third_party = ["flask", "opencv", "torch", "ultralytics"]

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["aisg"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/\.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
